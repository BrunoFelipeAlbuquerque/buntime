version: '3.9'
name: virtual
services:
  code:
    container_name: bun
    hostname: bun
    build:
      dockerfile: ./bun/Dockerfile
    ports:
      - 8080:8080
    networks:
      - backend
  database:
    container_name: postgresql
    hostname: postgresql
    build:
      dockerfile: ./postgresql/Dockerfile
    restart: always
    environment:
      - PGUSER=$POSTGRES_USER
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 3
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    depends_on:
      - code
    networks:
      - backend
  database-gui:
    container_name: pgadmin
    hostname: pgadmin
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=$PGADMIN_DEFAULT_EMAIL
      - PGADMIN_DEFAULT_PASSWORD=$PGADMIN_DEFAULT_PASSWORD
      - PGADMIN_LISTEN_PORT=5050
    ports:
      - "5050:5050"
    depends_on:
      - database
    networks:
      - backend
  cache:
    container_name: redis
    hostname: redis
    image: redis:7.2
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/data:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - REDIS_PORT=$REDIS_PORT
      - REDIS_DATABASES=$REDIS_DATABASES
    networks:
      - backend
  cache-gui:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    build: .
    restart: always
    environment:
    - REDIS_HOSTS=$REDIS_HOSTS
    ports:
    - 8081:8081
    depends_on:
      - cache
    networks:
      - backend

volumes:
  cache:
    driver: local
  pgdata:

networks:
  backend:
    driver: bridge